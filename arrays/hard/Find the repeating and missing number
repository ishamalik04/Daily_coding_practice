Given an unsorted array arr of size n of positive integers. One number 'A' from set {1, 2,....,N} is missing and one number 'B' occurs twice in array. Find these two numbers.
Your task is to complete the function findTwoElement() which takes the array of integers arr and n as parameters and returns an array of integers of size 2 denoting the
 answer (The first index contains B and second index contains A)
Examples

Input: n = 2 arr[] = {2, 2}
Output: 2 1
Explanation: Repeating number is 2 and smallest positive missing number is 1.
Input: n = 3 arr[] = {1, 3, 3} 
Output: 3 2
Explanation: Repeating number is 3 and smallest positive missing number is 2.

class Solution{
public:
    vector<int> findTwoElement(vector<int> arr, int n) {
        // code here
        // brute force
        int cnt=0,repeating=0,missing=0;
        for(int i=1;i<=n;i++){
            cnt=0;
            for(int j=0;j<n;j++){
                if(arr[j]==i){
                    cnt++;
                }
            }
            if(cnt==2){
                repeating=i;
            }
            else if(cnt==0){
                missing=i;
            }
            if(repeating!=0 && missing!=0){
                break;
            }
        }
        vector<int>ans;
        ans.push_back(repeating);
        ans.push_back(missing);
        return ans;
        
        
        // better - hashing
        int hash[n+1]={0};
        for(int i=0;i<n;i++){
            hash[arr[i]]++;
        }
        int repeating=-1,missing=-1;
        for(int i=1;i<=n;i++){
            if(hash[i]==2) repeating=i;
            else if(hash[i]==0) missing=i;
            if(repeating!=-1 && missing!=-1) break;
        }
        return {repeating,missing};
        
        // optimal usingg xor
        int xr=0;
        for(int i=0;i<n;i++){
            xr=xr^arr[i];
            xr=xr^(i+1);
        }
        int bitNo=(xr & ~(xr - 1));
        int zero=0;
        int one=0;
        for(int i=0;i<n;i++){
            if((arr[i]&bitNo)!=0){
                one=one^arr[i];
            }
            else{
                zero=zero^arr[i];
            }
        }
        for(int i=1;i<=n;i++){
            if((i &bitNo)!=0){
                one=one^i;
            }
            else{
                zero=zero^i;
            }
        }
        int cnt=0;
        for(int i=0;i<n;i++){
            if(arr[i]==zero) cnt++;
        }
        if(cnt==2) return {zero,one}
        
        
    }
};
