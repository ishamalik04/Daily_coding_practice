Problem statement
You have been given a directed weighted graph of ‘N’ vertices labeled from 1 to 'N' and ‘M’ edges.
Each edge connecting two nodes 'u' and 'v' has a weight 'w' denoting the distance between them.
Your task is to calculate the shortest distance of all vertices from the source vertex 'src'.

vector<int> bellmonFord(int n, int m, int src, vector<vector<int>> &edges) {
    vector<int>dist(n+1,1e8);
    dist[src]=0;
    for(int i=0;i<n-1;i++){
        for(auto it:edges){
            int u=it[0];
            int v=it[1];
            int wt=it[2];
            if(dist[u]+wt<dist[v]){
                dist[v]=dist[u]+wt;
            }
        }
    }
    return dist;
}
