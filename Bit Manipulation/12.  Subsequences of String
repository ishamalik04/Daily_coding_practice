Problem statement
You are given a string 'STR' containing lowercase English letters from a to z inclusive. Your task is to find all non-empty possible subsequences of 'STR'.
A Subsequence of a string is the one which is generated by deleting 0 or more letters from the string and keeping the rest of the letters in the same order.

Sample Input 1:
1 
abc
Sample Output 1:
a ab abc ac b bc c
Explanation of sample input 1:
All possible subsequences of abc are :  
“a” , “b” , “c” , “ab” , “bc” , “ac”, “abc”

#include <bits/stdc++.h> 
vector<string> subsequences(string str){
	int n=str.length();
	int subsets=(1<<n);
	vector<string>ans;
	for(int num=1;num<subsets;num++){
		string s="";
		for(int i=0;i<n;i++){
			if(num & (1<<i)){
				s+=str[i];
			}
		}
		ans.push_back(s);
	}
	return ans;
}


Time Complexity - O(N*2^N)
Space Complexity - O(N*2^N)
