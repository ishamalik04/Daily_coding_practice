Problem statement
You are given a binary tree having 'n' nodes. Each node of the tree has an integer value.
Your task is to find the maximum possible sum of a simple path between any two nodes (possibly the same) of the given tree.
A simple path is a path between any two nodes of a tree, such that no edge in the path is repeated twice. 
The sum of a simple path is defined as the summation of all node values in a path.

int maxSum(BinaryTreeNode<int>*root,int &maxi){
    if(root==NULL){
        return 0;
    }
    int left=max(0,maxSum(root->left,maxi));
    int right=max(0,maxSum(root->right, maxi));
    maxi=max(maxi,left+right+root->data);
    return max(left,right)+root->data;
}
int maxPathSum(BinaryTreeNode<int> *root)
{
    int maxi=INT_MIN;
    maxSum(root,maxi);
    return maxi;
}
