Problem statement
You have been given a Binary Tree of 'N' nodes, where the nodes have integer values.
Your task is to return the ln-Order, Pre-Order, and Post-Order traversals of the given binary tree.

Sample Input 1 :
1 2 3 -1 -1 -1  6 -1 -1
Sample Output 1 :
2 1 3 6 
1 2 3 6 
2 6 3 1

/*
    Following is Binary Tree Node structure:
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*/
void preOrder(TreeNode*root,vector<int>&v){
    if(root==NULL){
        return;
    }
    v.push_back(root->data);
    preOrder(root->left,v);
    preOrder(root->right,v);
}
void inOrder(TreeNode*root,vector<int>&v){
    if(root==NULL){
        return;
    }
    inOrder(root->left,v);
    v.push_back(root->data);
    inOrder(root->right,v);
}
void postOrder(TreeNode*root,vector<int>&v){
    if(root==NULL){
        return;
    }
    postOrder(root->left,v);
    postOrder(root->right,v);
    v.push_back(root->data);
}
vector<vector<int>> getTreeTraversal(TreeNode *root){
    vector<vector<int>>result;
    vector<int>inorder;
    inOrder(root,inorder);
    vector<int>preorder;
    preOrder(root,preorder);
    vector<int>postorder;
    postOrder(root,postorder);
    result.push_back(inorder);
    result.push_back(preorder);
    result.push_back(postorder);
    return result;
}
