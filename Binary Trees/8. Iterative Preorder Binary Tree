Problem statement
You are given a ‘Binary Tree’.



Return the preorder traversal of the Binary Tree.

// iterative approach

vector<int> preOrder(TreeNode<int> *root) {
    vector<int>pre;
    if(root==NULL)
    {
        return pre;
    }
    stack<TreeNode<int>*> st;
    st.push(root);
    while(!st.empty()){
        root=st.top();
        st.pop();
        pre.push_back(root->data);
        if(root->right){
            st.push(root->right);
        }
        if(root->left){
            st.push(root->left);
        }
    }
    return pre;
}
