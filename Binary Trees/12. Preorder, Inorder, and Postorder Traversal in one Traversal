Problem statement
You have been given a Binary Tree of 'N'nodes, where the nodes have integer values.
Your task is to return the ln-Order, Pre-Order, and Post-Order traversals of the given binary tree.

// iterative approach

vector<vector<int>> getTreeTraversal(TreeNode *root) {
    stack<pair<TreeNode*,int>>st;
    st.push({root,1});
    vector<vector<int>>result;
    vector<int>preorder,inorder,postorder;
    if(root==NULL){
        return result;
    }
    while(!st.empty()){
        auto it=st.top();
        st.pop();
        if(it.second==1){
            preorder.push_back(it.first->data);
            it.second++;
            st.push(it);
            if(it.first->left!=NULL){
                st.push({it.first->left,1});
            }
        }
        else if(it.second==2){
            inorder.push_back(it.first->data);
            it.second++;
            st.push(it);
            if(it.first->right!=NULL){
                st.push({it.first->right,1});
            }
        }
        else{
            postorder.push_back(it.first->data);
        }
    }
    result.push_back(inorder);
    result.push_back(preorder);
    result.push_back(postorder);
    return result;
}

