Problem statement
Given an array 'arr' that contains 7 integers representing the values of nodes in a binary tree. This represents level order. The first element of the array represents the value of the root node.
Your objective is to construct a binary tree using the remaining 6 elements of the array, creating nodes for each of these values and return root node.

Sample Input 1:
1 2 3 4 5 6 7
Sample Output 1:
1

/*
Following is the class structure of the Node class:

class Node
{
public:
    int data;
    Node *left, *right;
    Node()
    {
        this->data = 0;
        left = NULL;
    }
    Node(int data)
    {
        this->data = data; 
        this->left = NULL;
        this->right = NULL;
    }
    Node(int data, Node* left, Node* right)
    {
        this->data = data;
        this->left = left;
        this->right = right;
    }
};
*/

Node* createTree(vector<int>&arr){
    if(arr.empty()) return NULL;
    Node* root=new Node(arr[0]);
    queue<Node*>q;
    q.push(root);
    int i=1;
    while(!q.empty() && i<arr.size()){
        Node*temp=q.front();
        q.pop();
        Node*left=new Node(arr[i++]);
        temp->left=left;
        q.push(left);
        if(i<arr.size()){
            Node*right=new Node(arr[i++]);
            temp->right=right;
            q.push(right);
        }
    }
    return root;
}
