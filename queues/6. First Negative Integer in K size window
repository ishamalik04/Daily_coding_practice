//find first negative integer in every window of size k 

vector<long long> printFirstNegative(long long int A[],long long int N,long long int k)
{
    deque<long long int>dq;
    vector<long long>ans;
    
    //processing first window of k size
    for(int i=0;i<k;i++)
    {
        if(A[i]<0)
        {
            dq.push_back(i);
        }
    }
    
    //storing answer of first k sized window 
    if(dq.size() >0)
    {
        ans.push_back(A[dq.front()]);
    }
    else
    {
        ans.push_back(0);
    }
    
    //processing for remaining windows 
    for(int i=k;i<N;i++)
    {
        //removal 
        if(!dq.empty() && i-dq.front()>=k)
        {
            dq.pop_front(); 
        }
        
        //addition 
        if(A[i]<0)
        {
            dq.push_back(i);
        }
        
        //store ans
        if(dq.size() >0)
        {
            ans.push_back(A[dq.front()]);
        }
        else
        {
            ans.push_back(0);
        }
        
    }
    return ans;
}











