Problem statement
Given a linked list of 'N' nodes, where each node has an integer value that can be 0, 1, or 2. You need to sort the linked list in non-decreasing order and the return the head of the sorted list.

Example:
Given linked list is 1 -> 0 -> 2 -> 1 -> 2. 
The sorted list for the given linked list will be 0 -> 1 -> 1 -> 2 -> 2.

Node* sortList(Node *head){
        if( head==NULL || head->next==NULL){
            return head;
        }

        Node* zerohead= new Node(-1);
        Node* onehead= new Node(-1);
        Node* twohead= new Node(-1);

        Node*zero= zerohead;
        Node*one=onehead;
        Node*two=twohead;
        Node* temp=head;

        while(temp!=NULL){
            if(temp->data==0){
                zero->next=temp;
                zero=zero->next;
            }

            else if(temp->data==1){
                one->next=temp;
                one=one->next;
            }

            else if(temp->data==2){
                two->next=temp;
                two=two->next;
            }
            temp=temp->next;
        }

        zero->next=onehead->next?onehead->next:twohead->next;
        one->next=twohead->next;
        two->next=NULL;
        Node* newNode=zerohead->next;
        delete zerohead;
        delete onehead;
        delete twohead;

          return newNode;

    }

Time Complexity - O(N)
Space Complexity - O(1)
