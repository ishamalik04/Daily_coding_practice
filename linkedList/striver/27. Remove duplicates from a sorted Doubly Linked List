Problem statement
A doubly-linked list is a data structure that consists of sequentially linked nodes, and the nodes have reference to both the previous and the next nodes in the sequence of nodes.
You are given a sorted doubly linked list of size 'n'.
Remove all the duplicate nodes present in the linked list.
Example :
Input: Linked List: 1 <-> 2 <-> 2 <-> 2 <-> 3

Output: Modified Linked List: 1 <-> 2 <-> 3


Node * removeDuplicates(Node *head)
{
    Node*current=head;
    while(current!=NULL && current->next!=NULL){
        if(current->data ==current->next->data) {
            Node*next=current->next->next;
            Node*temp=current->next;
            if(next){
                current->next=next;
                next->prev=current;
            }else{
                current->next=NULL;
            }
            free(temp);
        }else{
            current=current->next;
        }
      
    }
    return head;
}

Time Complexity - O(N)
Space Complexity - O(1)
